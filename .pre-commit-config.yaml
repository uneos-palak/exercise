repos:
  - repo: local
    hooks:
      - id: gen_openapi_spec
        name: Generate OpenAPI spec
        language: system
        entry: openapi_excers
        args: [-f, yaml, -o, openapi_excers.yaml]
        always_run: true
        require_serial: true
        pass_filenames: false
      - id: gen_openapi_client
        name: Generate OpenAPI TypeScript client from spec
        always_run: true
        require_serial: true
        pass_filenames: false
        language: system
        entry: npx
        args:
          [
            openapi-typescript-codegen@0.24,
            --input,
            openapi_excers.yaml,
            --output,
            services/frontend/src/api,
            --client,
            axios,
            --useOptions,
            --useUnionTypes,
          ]
      - id: gen_feature_flags
        name: Generate TypeScript feature flags
        language: system
        entry: meflag_gen_ts_enum
        always_run: true
        require_serial: true
        pass_filenames: false
        args: [-o, services/frontend/src/feature_flags/FLAGS.ts]
      - id: type-check-build-frontend
        name: Type-check and Build Frontend Package
        language: system
        # build includes type-check
        entry: bash -exc 'cd services/frontend && npm run build'
        always_run: true
        require_serial: true
        pass_filenames: false
      - id: pytest-check
        name: Run pytest
        language: system
        entry: pytest
        args: [-c, services/backend/pyproject.toml, --rootdir, .]
        always_run: true
        require_serial: true
        pass_filenames: false
      - id: pyright
        name: Run pyright
        language: system
        entry: pyright
        args: [-p, services/backend/pyproject.toml]
        require_serial: true
        "types_or": [python]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-yaml
        exclude: templates/
      - id: check-toml
      - id: debug-statements
      - id: end-of-file-fixer
        exclude: (utf-16-|services/frontend/src/api)
      - id: mixed-line-ending
      - id: trailing-whitespace

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.7.1
    hooks:
      - id: prettier

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.38.0
    hooks:
      - id: eslint
        files: \.[jt]sx?$ # *.js, *.jsx, *.ts and *.tsx
        types: [file]
        additional_dependencies:
          - eslint@8.38.0
          - eslint-plugin-vue@9.11.0
          - "@typescript-eslint/eslint-plugin@5.59.0"
          - "@typescript-eslint/parser@5.59.0"

  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        types_or: [python, pyi, file]
        files: (^Tiltfile|\.py$)

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        additional_dependencies: ["flake8-print==5.0.0"]
        args: ["--select", "T"]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.0.262
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        exclude_types: ["pyi"]

  - repo: https://github.com/streetsidesoftware/cspell-cli
    rev: v6.31.0
    hooks:
      - id: cspell
        exclude: .env
        exclude_types: ["pyi"]
